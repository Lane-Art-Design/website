{"ast":null,"code":"var _jsxFileName = \"/home/horberlan/source/laneartdesign/website-1/src/componets/Pre_load.js\";\nimport React from \"react\"; // import Lottie from \"react-lottie\";\n\nimport Logo from './logo.json';\nimport App from \"../App\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n    background: linear-gradient(300deg,#4b87b5,#b03754);\n    background-size: 120% 120%;\n    animation: gradient-animation 1.5s ease infinite;\n    width:100vw;\n    height:100vh;\n\n@keyframes gradient-animation {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n`;\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true,\n  animationData: Logo,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\nconst defaultOptions2 = {\n  loop: true,\n  autoplay: true,\n  animationData: Logo,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\n\nclass PreLoader extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    // this simulates an async action, after which the component will render the content\n    demoAsyncCall().then(() => this.setState({\n      loading: false\n    }));\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n\n    if (loading) {\n      return null; // render null when app is not ready\n    }\n\n    return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nfunction demoAsyncCall() {\n  return new Promise(resolve => setTimeout(() => resolve(), 2500));\n}\n\nexport default PreLoader;","map":{"version":3,"sources":["/home/horberlan/source/laneartdesign/website-1/src/componets/Pre_load.js"],"names":["React","Logo","App","styled","Div","div","defaultOptions1","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","defaultOptions2","PreLoader","Component","state","loading","componentDidMount","demoAsyncCall","then","setState","render","Promise","resolve","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,GAAG,GAAGD,MAAM,CAACE,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;AAoBA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE,IADgB;AAEtBC,EAAAA,QAAQ,EAAE,IAFY;AAGtBC,EAAAA,aAAa,EAAER,IAHO;AAItBS,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,mBAAmB,EAAE;AADL;AAJI,CAAxB;AASA,MAAMC,eAAe,GAAG;AACtBL,EAAAA,IAAI,EAAE,IADgB;AAEtBC,EAAAA,QAAQ,EAAE,IAFY;AAGtBC,EAAAA,aAAa,EAAER,IAHO;AAItBS,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,mBAAmB,EAAE;AADL;AAJI,CAAxB;;AASA,MAAME,SAAN,SAAwBb,KAAK,CAACc,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD8B;AAAA;;AAKtCC,EAAAA,iBAAiB,GAAG;AAClB;AACAC,IAAAA,aAAa,GAAGC,IAAhB,CAAqB,MAAM,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAd,CAA3B;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA;AAAF,QAAc,KAAKD,KAAzB;;AAEA,QAAGC,OAAH,EAAY;AACV,aAAO,IAAP,CADU,CACG;AACd;;AACH,wBAEG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YAFH;AAKD;;AArBuC;;AAuBxC,SAASE,aAAT,GAAyB;AACvB,SAAO,IAAII,OAAJ,CAAaC,OAAD,IAAaC,UAAU,CAAC,MAAMD,OAAO,EAAd,EAAkB,IAAlB,CAAnC,CAAP;AACD;;AACD,eAAeV,SAAf","sourcesContent":["import React from \"react\";\n// import Lottie from \"react-lottie\";\nimport Logo from './logo.json';\nimport App from \"../App\";\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n    background: linear-gradient(300deg,#4b87b5,#b03754);\n    background-size: 120% 120%;\n    animation: gradient-animation 1.5s ease infinite;\n    width:100vw;\n    height:100vh;\n\n@keyframes gradient-animation {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n`;\n\nconst defaultOptions1 = {\n  loop: true,\n  autoplay: true,\n  animationData: Logo,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n};\n\nconst defaultOptions2 = {\n  loop: true,\n  autoplay: true,\n  animationData: Logo,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\",\n  },\n};\n\nclass PreLoader extends React.Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount() {\n    // this simulates an async action, after which the component will render the content\n    demoAsyncCall().then(() => this.setState({ loading: false }));\n  }\n  \n  render() {\n    const { loading } = this.state;\n    \n    if(loading) {\n      return null; // render null when app is not ready\n    }\n  return (\n    \n     <App></App>\n    \n  );\n}\n}\nfunction demoAsyncCall() {\n  return new Promise((resolve) => setTimeout(() => resolve(), 2500));\n}\nexport default PreLoader;"]},"metadata":{},"sourceType":"module"}