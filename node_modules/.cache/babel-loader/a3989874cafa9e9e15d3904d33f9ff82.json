{"ast":null,"code":"var _jsxFileName = \"/home/horberlan/Downloads/alanne/site/website/src/componets/Pre_load.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Splashscreen = props => {\n  _s();\n\n  const [hasAnimationPlayedOnce, setHasAnimationPlayedOnce] = React.useState(false); // We only want to hide the Splash Screen after it has played at least once\n\n  const handleAnimationFinish = () => {\n    setHasAnimationPlayedOnce(true);\n  };\n\n  const isModalVisible = !(props.isAppInitialized && hasAnimationPlayedOnce);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: isModalVisible,\n    animationType: \"fade\",\n    children: /*#__PURE__*/_jsxDEV(LottieView, {\n      source: animatedLogo,\n      loop: false,\n      autoPlay: true,\n      onAnimationFinish: handleAnimationFinish\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Splashscreen, \"dMgUCvPWXOItnsB2Q9VKFQdwkEY=\");\n\n_c = Splashscreen;\n\nconst mapStateToProps = state => ({\n  isAppInitialized: appInitSelectors.isAppInitialized(state)\n});\n\nexport default connect(mapStateToProps)(Splashscreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"Splashscreen\");","map":{"version":3,"sources":["/home/horberlan/Downloads/alanne/site/website/src/componets/Pre_load.js"],"names":["Splashscreen","props","hasAnimationPlayedOnce","setHasAnimationPlayedOnce","React","useState","handleAnimationFinish","isModalVisible","isAppInitialized","animatedLogo","mapStateToProps","state","appInitSelectors","connect"],"mappings":";;;;;AAAA,MAAMA,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA5D,CAD4B,CAG5B;;AACA,QAAMC,qBAAqB,GAAG,MAAM;AAClCH,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACD,GAFD;;AAIA,QAAMI,cAAc,GAAG,EAAEN,KAAK,CAACO,gBAAN,IAA0BN,sBAA5B,CAAvB;AAEA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEK,cAAhB;AAAgC,IAAA,aAAa,EAAC,MAA9C;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,MAAM,EAAEE,YADV;AAEE,MAAA,IAAI,EAAE,KAFR;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,iBAAiB,EAAEH;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApBH;;GAAMN,Y;;KAAAA,Y;;AAsBJ,MAAMU,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,gBAAgB,EAAEI,gBAAgB,CAACJ,gBAAjB,CAAkCG,KAAlC;AADgB,CAAZ,CAAxB;;AAIA,eAAeE,OAAO,CAACH,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["const Splashscreen = (props) => {\n    const [hasAnimationPlayedOnce, setHasAnimationPlayedOnce] = React.useState(false)\n  \n    // We only want to hide the Splash Screen after it has played at least once\n    const handleAnimationFinish = () => {\n      setHasAnimationPlayedOnce(true)\n    }\n  \n    const isModalVisible = !(props.isAppInitialized && hasAnimationPlayedOnce)\n  \n    return (\n      <Modal visible={isModalVisible} animationType=\"fade\">\n        <LottieView\n          source={animatedLogo}\n          loop={false}\n          autoPlay\n          onAnimationFinish={handleAnimationFinish}\n         />\n      </Modal>\n    )\n  }\n  \n  const mapStateToProps = (state) => ({\n    isAppInitialized: appInitSelectors.isAppInitialized(state),\n  })\n  \n  export default connect(mapStateToProps)(Splashscreen)\n  "]},"metadata":{},"sourceType":"module"}